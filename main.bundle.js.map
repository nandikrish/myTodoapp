{"version":3,"sources":["webpack:///./src/app/user.service.ts","webpack:///./src/app/todo.component.ts","webpack:///./src/app/todo.service.ts","webpack:///./src/app/user-add.component.ts","webpack:///./src/app/user.component.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/todo.component.html","webpack:///./src/app/user-add.component.html","webpack:///./src/app/user.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\n\nimport 'rxjs/add/operator/map';\n\nimport { Users } from './users';\n\n@Injectable()\nexport class UserService {\n\n  constructor(private http:Http) {}\n\n/******* from udemy  *******/\n  getUsers(){\n    return this.http.get(\"https://jsonplaceholder.typicode.com/users\")\n    .map((response: Response) => response.json())\n  }\n\n  addUser(user:Users){\n    const body = JSON.stringify(user);\n    const headers = new Headers({\n      'Content-Type': 'application/json'\n    });\n    //console.log(body);\n    return this.http.post('https://myfirstapp-f40a6.firebaseio.com/users.json', body, {headers: headers});\n  }\n\n/******** from angular developer *******/\n  /*getUsers(): Promise<any> {\n    return this.http.get(\"https://jsonplaceholder.typicode.com/users\")\n      .toPromise()\n      .then(response => response.json() as Users[])\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }*/\n\n  \n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user.service.ts","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Todos } from './todos';\nimport { TodoService } from './todo.service';\n\n@Component({\n  selector: 'fa-todo',\n  templateUrl: './todo.component.html',\n})\nexport class TodoComponent implements OnInit {\n  @Input() counter: number = 0;\n\n  todos: Todos[];\n  constructor(private todoService: TodoService) { }\n\n  ngOnInit() {\n    this.todoService.getTodos()\n      .subscribe(\n      data => {\n        const myArray = [];\n        for (let key in data) {\n          myArray.push(data[key]);\n        }\n        this.todos = myArray;\n      }\n      );\n  }\n\n  checkbox(todo) {\n    if (todo.selected) {\n      this.counter++;\n      //console.log(\"if-selected\"+this.counter);\n    } else {\n      this.counter--;\n      //console.log(\"else-selected\"+this.counter);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/todo.component.ts","import { Injectable, Input } from '@angular/core';\nimport 'rxjs/add/operator/map';\n\n//import 'rxjs/add/operator/toPromise';\n\nimport { Http, Response } from '@angular/http';\nimport { Todos } from './todos';\n\n\n@Injectable()\nexport class TodoService {\n  constructor(private http: Http) { }\n\n  getTodos() {\n    return this.http.get(\"https://jsonplaceholder.typicode.com/todos\")\n      .map((response: Response) => response.json())\n  }\n\n  /*getTodos(): Promise<Todos[]> {\n    return this.http.get(\"https://jsonplaceholder.typicode.com/todos\")\n      .toPromise()\n      .then(response => response.json() as Todos[])\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }*/\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/todo.service.ts","import { Component, Input } from '@angular/core';\nimport { NgForm } from \"@angular/forms\";\n\nimport { Users } from './users';\nimport { UserService } from './user.service';\n\n@Component({\n  selector: 'app-user-add',\n  templateUrl: './user-add.component.html',\n})\nexport class UserAddComponent {\n  @Input() user: Users[] = [];\n\n  constructor(private userService: UserService) { }\n\n  onSubmit(user: Users) {\n    //console.log(user);\n   var status= this.userService.addUser(user);\n   console.log(status);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user-add.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from './user.service';\nimport { Users } from './users';\n@Component({\n  selector: 'fa-user',\n  templateUrl: './user.component.html',\n})\nexport class UserComponent implements OnInit {\n\n  users: Users[];\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit() {\n    this.userService.getUsers()\n      .subscribe(\n      data => {\n        const myArray = [];\n        for (let key in data) {\n          myArray.push(data[key]);\n        }\n        this.users = myArray;\n      }\n      );\n      /*this.userService.getUsers().then(users => this.users = users);*/\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user.component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 335;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 335\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'fa-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { TodoComponent } from './todo.component';\nimport { UserComponent } from './user.component';\nimport { routing } from './app.routing';\n\nimport { TodoService } from './todo.service';\nimport { UserService } from './user.service';\nimport { UserAddComponent } from './user-add.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoComponent,\n    UserComponent,\n    UserAddComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    routing\n  ],\n  providers: [ TodoService, UserService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TodoComponent } from './todo.component';\r\nimport { UserComponent } from './user.component';\r\nimport { UserAddComponent } from './user-add.component';\r\n\r\nconst APP_ROUTES: Routes=[\r\n    {path: '', redirectTo: '/todo', pathMatch: 'full'},\r\n    {path:'todo', component:TodoComponent},\r\n    {path:'user', component:UserComponent},\r\n    {path:'addUser', component:UserAddComponent},\r\n]\r\n\r\nexport const routing = RouterModule.forRoot(APP_ROUTES);\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routing.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <a class=\\\"navbar-brand\\\"><strong>ToDo List</strong></a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li routerLinkActive=\\\"active\\\"><a [routerLink]=\\\"['todo']\\\">ToDo</a></li>\\n        <li routerLinkActive=\\\"active\\\"><a [routerLink]=\\\"['user']\\\">User</a></li>\\n      </ul>\\n    </div><!-- /.navbar-collapse -->\\n  </div><!-- /.container-fluid -->\\n</nav>\\n<!--div class=\\\"alert alert-danger\\\">\\n  Selected Todos :<p [counter]></p>\\n</div-->\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 513\n// module chunks = 1","module.exports = \"<div class=\\\"alert alert-danger\\\">\\n  Selected Todos : {{counter}}\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"hpanel\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <!-- Default panel contents -->\\n      <div class=\\\"panel-heading\\\">ToDo List</div>\\n\\n      <!-- Table -->\\n      <table class=\\\"table\\\">\\n        <thead>\\n          <th></th>\\n          <th>User Id</th>\\n          <th>Title</th>\\n          <th>Status</th>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let todo of todos;\\\">\\n              <td><input type=\\\"checkbox\\\" [(ngModel)]=\\\"todo.selected\\\" (change)=\\\"checkbox(todo)\\\"></td>\\n              <td>{{todo.userId}}</td>\\n              <td>{{todo.title}}</td>\\n              <td>{{todo.completed}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/todo.component.html\n// module id = 514\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"hpanel\\\">\\n    <form (ngSubmit)=\\\"onSubmit(f.value)\\\" #f=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"user-name\\\">Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-name\\\" [(ngModel)]=\\\"user.name\\\" name=\\\"name\\\" required>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"user-email\\\">E-Mail</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-email\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\" required pattern=\\\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\"\\n          #email=\\\"ngModel\\\">\\n        <div *ngIf=\\\"!email.valid\\\">\\n          Invalid email\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"user-phone\\\">Phone Number</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-phone\\\" [(ngModel)]=\\\"user.phone\\\" name=\\\"phone\\\" required>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"user-website\\\">Website</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"user-website\\\" [(ngModel)]=\\\"user.website\\\" name=\\\"website\\\" required>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!f.valid\\\">Save</button>\\n      <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\">Clear</button>\\n    </form>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user-add.component.html\n// module id = 515\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"hpanel\\\">\\n    <div class=\\\"text-right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-warning\\\"><a [routerLink]=\\\"['/addUser']\\\">Add User</a></button>\\n    </div><br>\\n    <div class=\\\"panel panel-primary\\\">\\n      <!-- Default panel contents -->\\n      <div class=\\\"panel-heading\\\">User List</div>\\n\\n      <!-- Table -->\\n      <table class=\\\"table\\\">\\n        <thead>\\n          <th>Name</th>\\n          <th>Email</th>\\n          <th>Phone</th>\\n          <th>Website</th>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let user of users\\\">\\n            <td>{{user.name}}</td>\\n            <td>{{user.email}}</td>\\n            <td>{{user.phone}}</td>\\n            <td>{{user.website}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user.component.html\n// module id = 516\n// module chunks = 1"],"sourceRoot":""}